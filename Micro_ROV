//http://rztronics.com/control-brushless-motor-using-arduino/

#include <Servo.h> //Using servo library to control ESC
#define maxval 1250
#define minval 1750
#define stopval 1500
Servo esc; //Creating a servo class with name as esc

void readserialbyte();

int val = 1500;
int x = -1;
//byte d;
//byte temp_s_m[8];


void setup()
{ 
  pinMode(LED_BUILTIN, OUTPUT);
  Serial.begin(115200);

  esc.attach(9); //Specify the esc signal pin,Here as D8
  //Serial.println("Booting, please wait.");
  delay(7000);
  //Serial.println("Send 1 to start up.");

  do {
    esc.writeMicroseconds(1500);
    /*
      x = Serial.read();
      x -= 48;
    */
    readserialbyte();
  } while (x != 1);

  //esc.writeMicroseconds(val); //initialize the signal to 1000
  //Serial.println(val);
  x = -1;

  //delay(5000);

  while (val > maxval) {
    val -= 50;
    esc.writeMicroseconds(val);
    //Serial.println(val);
    delay(100);
  }
}

void loop()

{
  /*
    int val; //Creating a variable val

    val= analogRead(A0); //Read input from analog pin a0 and store in val

    val= map(val, 0, 1023,1000,2000); //mapping val to minimum and maximum(Change if needed)
  */
  /*
    x = Serial.read();
    x = x - 48;
    if (x == 2) {
    val += 100;
    } else if (x == 1) {
      val = val - 100;
      }
  */
  /*
    x = Serial.read();
    x -= 48;
  */
  /*
    if (x == 3) {
    if ((val > maxval) || (val == stopval)) {
      while (val > maxval) {
        val -= 50;
        esc.writeMicroseconds(val);
        Serial.println(val);
        delay(100);
      }
    } else if (val < minval){
      while (val < minval) {
        val += 50;
        esc.writeMicroseconds(val);
        Serial.println(val);
        delay(100);
      }
    }
    } else
  */

  readserialbyte();

  if (x == 0) {
    if (val < stopval) {
      while (val < stopval) {
        val += 50;
        esc.writeMicroseconds(val);
        //Serial.println(val);
        delay(100);
      }
    } else if (val > stopval) {
      while (val > stopval) {
        val -= 50;
        esc.writeMicroseconds(val);
        //Serial.println(val);
        delay(100);
      }
    }
  } else if (x == 1) {
    while (val > maxval) {
      val -= 50;
      esc.writeMicroseconds(val);
      //Serial.println(val);
      delay(100);
    }
  } else if (x == 2) {
    while (val < minval) {
      val += 50;
      esc.writeMicroseconds(val);
      //Serial.println(val);
      delay(100);
    }
  }

  //Serial.println(val);
  //esc.writeMicroseconds(val); //using val as the signal to esc

  x = -1;
}

void readserialbyte() {
  if (Serial.available()) {
    byte d = Serial.read();
    if (d == 0xD1) {
      byte temp_s_m[7];
      Serial.readBytes(temp_s_m, 7);
      //Serial.print(temp_s_m[0], HEX);
      if (temp_s_m[2] == (byte) (1)) {
        x = 1;
        digitalWrite(LED_BUILTIN, HIGH);
      } else if (temp_s_m[2] == (byte) (2)) {
        x = 2;
        digitalWrite(LED_BUILTIN, HIGH);
      } else if (temp_s_m[2] == (byte) (0)) {
        x = 0;
        digitalWrite(LED_BUILTIN, LOW);
      }
    }
  }
}
